/*
Stylus variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon_home_width;
}

The large array-like variables contain all information about a single icon
$icon_home = x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet = width height image $spritesheet_sprites;
*/
$what_customers_think_item_txt_img_a_hover_name = 'what_customers_think_item_txt_img_a_hover';
$what_customers_think_item_txt_img_a_hover_x = 0px;
$what_customers_think_item_txt_img_a_hover_y = 0px;
$what_customers_think_item_txt_img_a_hover_offset_x = 0px;
$what_customers_think_item_txt_img_a_hover_offset_y = 0px;
$what_customers_think_item_txt_img_a_hover_width = 21px;
$what_customers_think_item_txt_img_a_hover_height = 11px;
$what_customers_think_item_txt_img_a_hover_total_width = 44px;
$what_customers_think_item_txt_img_a_hover_total_height = 11px;
$what_customers_think_item_txt_img_a_hover_image = '~sprite/sprite.png';
$what_customers_think_item_txt_img_a_hover = 0px 0px 0px 0px 21px 11px 44px 11px '~sprite/sprite.png' 'what_customers_think_item_txt_img_a_hover';
$what_customers_think_item_txt_img_a_name = 'what_customers_think_item_txt_img_a';
$what_customers_think_item_txt_img_a_x = 23px;
$what_customers_think_item_txt_img_a_y = 0px;
$what_customers_think_item_txt_img_a_offset_x = -23px;
$what_customers_think_item_txt_img_a_offset_y = 0px;
$what_customers_think_item_txt_img_a_width = 21px;
$what_customers_think_item_txt_img_a_height = 11px;
$what_customers_think_item_txt_img_a_total_width = 44px;
$what_customers_think_item_txt_img_a_total_height = 11px;
$what_customers_think_item_txt_img_a_image = '~sprite/sprite.png';
$what_customers_think_item_txt_img_a = 23px 0px -23px 0px 21px 11px 44px 11px '~sprite/sprite.png' 'what_customers_think_item_txt_img_a';
$spritesheet_width = 44px;
$spritesheet_height = 11px;
$spritesheet_image = '~sprite/sprite.png';
$spritesheet_sprites = $what_customers_think_item_txt_img_a_hover $what_customers_think_item_txt_img_a;
$spritesheet = 44px 11px '~sprite/sprite.png' $spritesheet_sprites;

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  spriteWidth($icon_home)
}

.icon-email {
  sprite($icon_email)
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
spriteWidth($sprite) {
  width: $sprite[4];
}

spriteHeight($sprite) {
  height: $sprite[5];
}

spritePosition($sprite) {
  background-position: $sprite[2] $sprite[3];
}

spriteImage($sprite) {
  background-image: url($sprite[8]);
}

sprite($sprite) {
  spriteImage($sprite)
  spritePosition($sprite)
  spriteWidth($sprite)
  spriteHeight($sprite)
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of Stylus

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

sprites($spritesheet_sprites);
*/
sprites($sprites) {
  for $sprite in $sprites {
    $sprite_name = $sprite[9];
    .{$sprite_name} {
      sprite($sprite);
    }
  }
}
